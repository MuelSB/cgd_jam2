-----------------------------------------------------------------------------------
Luke Eyre, 18021178
CGD Game 2
Week 1, 24/11/21

**Tasks completed**

+Added Level Generation

My main task on this project for the first week is to work on the generation, not of the grid, but for all of the information that the grid will contain, such as biome distribution, tile types, structure locations and types, etc.

+ Added level generation via the MetaGenerator class.

To do this I created a MetaGenerator class that is responsible for creating this data.
Generation uses 2d perlin noise to generate integrity and then uses a voroni euclidean growth method to create and expand biomes. Structures are then added afterwards. 

+ Exposed config structs as variables to the gameobject for easy tweaking

All values can be easily tweaked in a exposed config in the editor for the ease of the team.

+ Added new biomes to the enum for testing.

We have yet to decide on all the tile types, so I expanded the test one that already existed until we settle on what we want.

Added Entities to tiles, Maybe Class and more helper functions.

Entities can exist on a tile, but they might not be, so I use a maybe to denote the possible null value via type to my team mates and also assure a type safe way of getting its value should it exist.

New Helper functions:
- isPlayer: returns if a gameobject with a maptile component has the entity type of player.
- isOfEntityType: returns if a gameobject with a maptile component has the entity type provided.
- doesEntityOfTypeExistOnGrid: returns if a specified entity type exists somewhere on the map.
- getPlayerFromGrid: returns the position of the player if it exists, otherwise it returns an empty maybe.
- getClosestTilesOfType: returns a list of positions of the closest position of a specified tile type from a given centre coordinate. list will have more than one entry if a tiles of the given type are equidistant to the given centre. will return an empty maybe if there is no tile of that type found.
 - typeHasVillage: returns if the type of the provided tile has a village variant.
-isVillageType: returns if the provided type is a valid village.

Class Changes:
+ Added basic Maybe class.
~ added GetTiles to map that allows you to get the entire map.
~ map now tells the map tile its given location.
~ MapCoordinate now can subtract from each other.
~ tile_enitity is now stored in tile as a Maybe<Entity>
~ can now set and get location from the Maptile.

Fixed various bugs with the meta gen

Maps can now be any size (size is still clamped between 3 and 10,000)

Biome spawn points cannot be on the same tile, and will only be placed if there is space to do so.

I added various features requested by my teammates that draw upon the data generated by the meta generator

**Questions raised**

"What special tiles exist?"

I will need get the group to decide on what is needed struture/biome/tile type/ wise as I have currently only be using temporary values.

"What should a tile look like?"

Currently tiles are just coloured based on what type they are, but it would be great to get some 3D modules in. That just comes down to if time permits it.
